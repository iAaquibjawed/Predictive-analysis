version: '3.8'

services:
  ml-service:
    build: .
    container_name: cdss-ml-service
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - DATABASE_URL=postgresql://ml_user:ml_password@postgres:5432/ml_database
      - REDIS_URL=redis://redis:6379/0
      - ML_API_TOKEN=your_ml_api_token_here
      - JWT_SECRET_KEY=your_jwt_secret_key_here
      - OPENAI_API_KEY=your_openai_api_key_here
      - PUBMED_API_KEY=your_pubmed_api_key_here
      - DRUGBANK_API_KEY=your_drugbank_api_key_here
      - NHS_API_KEY=your_nhs_api_key_here
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - PROMETHEUS_PORT=9090
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
      - ./models:/app/models
    depends_on:
      - postgres
      - redis
    networks:
      - cdss-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: cdss-postgres
    environment:
      - POSTGRES_DB=ml_database
      - POSTGRES_USER=ml_user
      - POSTGRES_PASSWORD=ml_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cdss-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: cdss-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cdss-network
    restart: unless-stopped

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: cdss-mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://localhost:5000
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=./mlruns
    volumes:
      - mlflow_data:/mlflow
      - ./mlruns:/mlflow/mlruns
    networks:
      - cdss-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: cdss-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - cdss-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: cdss-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - cdss-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  mlflow_data:
  prometheus_data:
  grafana_data:

networks:
  cdss-network:
    driver: bridge

